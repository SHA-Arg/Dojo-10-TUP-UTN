Algoritmo "Quicksort":
1 Se crea la funcion swap, la cual devuelve una tupla con los valores de a y b intercambiados
2 Se crea la funcion particionar, a la cual se le pasan 3 parametros: un array, el minimo y el maximo.
a. Se define un pivote dentro de un array, el cual corresponde al ultimo elemento del mismo.
b. Define el indice i como el indice que está anterior al minimo.
c. Se crea un bucle for que va desde el minimo hasta el maximo -1 (ya que es un "desde" inclusivo y un "hasta" exclusivo)
d. Compara el elemento j del array. Si este es menor o igual al pivote establecido, ejecuta el siguiente codigo: aumenta el indice i en uno, e intercambia los lugares de los elementos en la posicion i y j
e. Luego, coloca el pivote en su posicion correcta, quedando asi este ordenado definitivamente, y dejando a su izquierda un subarreglo con elementos mas pequeños que su valor, y a su derecha un subarreglo con elementos mas grandes que su valor
f. Por ultimo, retorna la posicion final del pivote.

2_ Se define la funcion quick_sort, a la cual se le brindan nuevamente los parametros del array, minimo y maximo.
a. Se agrega un condicional, el cual compara si el minimo es menor al maximopara determinar si hay un subarreglo que necesita ser ordenado.
b. En caso de ser verdadero, llama a la funcion particionar para obtener el indice de particion, y lo almacena en la variable "pi".
c. Por ultimo, ordena los subarreglos de la izquierda y derecha del pivote.
eso es lo que vi que hace el algoritmo, todavia no lo cazo mucho asi que no se si esta bien
y la verdad que no se como chota se plantea el algoritmo sin recursion jajajaj, asi que esa parte no se como hacerla
